kind: Pipeline
apiVersion: tekton.dev/v1beta1
metadata:
  name: example-pipeline
spec:
  params:
    - description: 'Snapshot of the application'
      name: SNAPSHOT
      type: string
  tasks:
    - name: provision-env
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/redhat-appstudio/build-definitions
          - name: revision
            value: main
          - name: pathInRepo
            value: task/provision-env-with-ephemeral-namespace/0.1/provision-env-with-ephemeral-namespace.yaml

    - name: verify-provisioning
      runAfter: [provision-env]
      taskSpec:
        steps:
          - name: verify-provisioning
            image: registry.redhat.io/openshift4/ose-cli:4.13@sha256:73df37794ffff7de1101016c23dc623e4990810390ebdabcbbfa065214352c7c
            env:
              - name: KUBECONFIG_VALUE
                valueFrom:
                  secretKeyRef:
                    name: "$(tasks.provision-env.results.secretRef)"
                    key: kubeconfig
            script: |
              #!/bin/bash
              set -ex

              cat <<< "$KUBECONFIG_VALUE" > /tmp/cfg
              oc run --kubeconfig /tmp/cfg test-pod --image=nginx
              oc get --kubeconfig /tmp/cfg pods
              oc get --kubeconfig /tmp/cfg pods test-pod -o=jsonpath='{.metadata.namespace}'
              oc delete --kubeconfig /tmp/cfg pod test-pod